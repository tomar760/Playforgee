import { initializeApp } from "https://www.gstatic.com/firebasejs/9.6.10/firebase-app.js";
import {
  getAuth,
  onAuthStateChanged,
  signOut
} from "https://www.gstatic.com/firebasejs/9.6.10/firebase-auth.js";
import {
  getDatabase,
  ref,
  get,
  set,
  push,
  update
} from "https://www.gstatic.com/firebasejs/9.6.10/firebase-database.js";

import { firebaseConfig } from "../firebase-config.js";

const app = initializeApp(firebaseConfig);
const auth = getAuth(app);
const db = getDatabase(app);

let currentUser;
let selectedColor = null;

// Auth listener
onAuthStateChanged(auth, (user) => {
  if (user) {
    currentUser = user;
    document.getElementById("userEmail").innerText = user.email;
    loadCoins();
    startNewRound(); // Start game on login
  } else {
    window.location.href = "index.html";
  }
});

function loadCoins() {
  get(ref(db, "users/" + currentUser.uid)).then((snapshot) => {
    if (snapshot.exists()) {
      document.getElementById("userCoins").innerText = snapshot.val().coins;
    }
  });
}

window.makeChoice = function (color) {
  selectedColor = color;
  document.getElementById("result").innerText = `You selected: ${color}`;
}

function startNewRound() {
  let timeLeft = 25;
  document.getElementById("countdown").innerText = `Next round in: ${timeLeft}s`;

  const interval = setInterval(() => {
    timeLeft--;
    document.getElementById("countdown").innerText = `Next round in: ${timeLeft}s`;

    if (timeLeft <= 0) {
      clearInterval(interval);
      playRound();
    }
  }, 1000);
}

function playRound() {
  const roundRef = ref(db, "rounds/current");

  get(roundRef).then((snapshot) => {
    let winningColor;
    if (snapshot.exists() && snapshot.val().winningColor) {
      winningColor = snapshot.val().winningColor;
    } else {
      const colors = ["Red", "Green", "Violet"];
      winningColor = colors[Math.floor(Math.random() * 3)];
      set(roundRef, {
        roundId: Date.now(),
        winningColor: winningColor,
        autoGenerated: true
      });
    }

    const userRef = ref(db, "users/" + currentUser.uid);
    get(userRef).then((snap) => {
      if (snap.exists()) {
        let coins = snap.val().coins;
        let win = selectedColor === winningColor;

        if (win) {
          coins += 20;
        } else {
          coins -= 10;
        }

        update(userRef, { coins: coins });
        document.getElementById("userCoins").innerText = coins;

        const resultText = win ? "🎉 You Won!" : `❌ You Lost! Winning color was ${winningColor}`;
        document.getElementById("result").innerText = resultText;

        const historyRef = push(ref(db, "history/" + currentUser.uid));
        set(historyRef, {
          time: new Date().toLocaleString(),
          selected: selectedColor,
          winningColor: winningColor,
          win: win
        });

        selectedColor = null;
        setTimeout(startNewRound, 3000);
      }
    });
  });
}

window.logout = function () {
  signOut(auth).then(() => {
    window.location.href = "index.html";
  });
}
